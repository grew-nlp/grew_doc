package S {
  rule B2A { pattern { e: X -[B]-> Y } commands { del_edge e; add_edge X -[A]-> Y } }
  rule B2C { pattern { e: X -[B]-> Y } commands { del_edge e; add_edge X -[C]-> Y } }
  rule C2B { pattern { e: X -[C]-> Y } commands { del_edge e; add_edge X -[B]-> Y } }
  rule C2D { pattern { e: X -[C]-> Y } commands { del_edge e; add_edge X -[D]-> Y } }
}

strat iter { Iter (S) }
strat pick_iter { Pick (Iter (S)) }
strat iter_pick { Iter (Pick (S)) }
strat onf { Onf (S) }